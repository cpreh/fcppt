/**
\page changes Changes

\section changes_changes_to_441 4.4.1

<ul>

<li>Cleaned up <code>clang-17</code> warnings.</li>
<li>Added Include-What-You-Use pragmas.</li>

</ul>

\subsection changes_added_functionality_to_441 Added functionality

<ul>

<li>\ref fcpptmpl
	<ul>
	<li>Added #fcppt::mpl::apply_v.</li>
	<li>Added #fcppt::mpl::is_invocable_v.</li>
	<li>Added #fcppt::mpl::list::all_of_v.</li>
	<li>Added #fcppt::mpl::list::any_of_v.</li>
	<li>Added #fcppt::mpl::list::contains_v.</li>
	<li>Added #fcppt::mpl::list::distinct_v.</li>
	<li>Added #fcppt::mpl::list::empty_v.</li>
	<li>Added #fcppt::mpl::map::equal_v.</li>
	<li>Added #fcppt::mpl::map::has_key_v.</li>
	<li>Added #fcppt::mpl::set::contains_v.</li>
	<li>Added #fcppt::mpl::set::equal_v.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added #fcppt::record::all_disjoint_v.</li>
	<li>Added #fcppt::record::are_disjoint_v.</li>
	<li>Added #fcppt::record::are_equivalent_v.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added #fcppt::type_traits::implication_v.</li>
	<li>Added #fcppt::type_traits::is_iterator_of_category_v.</li>
	</ul>
</li>

<li>\ref fcpptparse
	<ul>
	<li>Added #fcppt::parse::skipper::is_skipper_v.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_440 4.4.0

<ul>

<li>Added a workaround for Apple Clang.</li>
<li>Cleaned up <code>clang-16</code> and <code>gcc-13</code> warnings.</li>

</ul>

\subsection changes_changed_functionality_to_440 Changed functionality

<ul>

<li>\ref fcpptboost
	<ul>
	<li>Use <code>fcppt::ref</code> in the constructor of #fcppt::scoped_state_machine.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Changed error types from just being strings to having actual structure.</li>
	<li>Changed the return type of <code>usage</code> from a string to #fcppt::options::usage.
	In addition, #fcppt::options::help_result now also uses #fcppt::options::usage instead
	of #fcppt::options::help_text.</li>
	</ul>
</li>

<li>\ref fcpptparse
	<ul>
	<li>Changed error types from just being strings to having actual structure.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_440 Removed functionality

<ul>

<li>fcpptassert
	<ul>
	<li>Removed most of the library.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_440 Bugfixes

<ul>

<li>\ref fcpptstring
	<ul>
	<li>Added missing <code>FCPPT_DETAIL_SYMBOL</code> on <code>fcppt::exception::string</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_430 4.3.0

<ul>

<li>Switched from <code>Catch-2</code> to <code>Catch-3</code> for unit tests.</li>
<li>Fixed some warnings related to <code>clang-15</code>.</li>
<li>Support for <code>VC++-14.34</code> (Visual Studio 2022 Version 17.4).</li>

</ul>

\subsection changes_added_functionality_to_430 Added functionality

<ul>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::get_or_assign.</li>
	</ul>
</li>

<li>\ref fcpptparse
	<ul>
	<li>Added #fcppt::parse::exclude.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_430 Removed functionality

<ul>

<li>\ref fcpptassert
	<ul>
	<li>Removed <code>FCPPT_ASSERT_OPTIONAL_ERROR</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_430 Bugfixes

<ul>

<li>\ref fcpptparse
	<ul>
	<li>Fixed #fcppt::parse::parse_stream.</li>
	<li>Fixed #fcppt::parse::skipper::basic_space char type.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_421 4.2.1

<p>
Support for <code>VC++-14.32</code> (Visual Studio 2022 Version 17.2).
</p>

\section changes_changes_to_420 4.2.0

\subsection changes_added_functionality_to_420 Added functionality

<p>
This release fixes some warnings related to <code>clang-14</code>.
</p>

<ul>

<li>\ref fcppttuple
	<ul>
	<li>Added #fcppt::tuple::as_struct.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_420 Removed functionality

<ul>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::replace_extension</code>. Use <code>std::filesystem::path::replace_extension</code>.</li>
	<li>Removed <code>fcppt::filesystem::strip_prefix</code>. Use <code>std::filesystem::relative</code>.</li>
	<li>Removed <code>fcppt::filesystem::num_subpaths</code>.</li>
	<li>Removed <code>fcppt::filesystem::normalize</code>.</li>
	<li>Removed <code>fcppt::filesystem::stem</code>. Use <code>std::filesystem::path::stem</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_410 4.1.0

<p>
This release fixes some warnings related to <code>clang-13</code>.
</p>

\subsection changes_added_functionality_to_410 Added functionality

<ul>

<li>\ref fcpptcontainerraw_vector
	<ul>
	<li>Added output operator for #fcppt::container::raw_vector::object.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added #fcppt::make_strong_typedef.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_410 Changed functionality

<ul>

<li>\ref fcpptcontainerraw_vector
	<ul>
	<li>Changed constructor of #fcppt::container::raw_vector::rep to use strong typedefs.</li>
	</ul>
</li>

<li>\ref fcpptmathbox
	<ul>
	<li>Changed constructor of #fcppt::math::box::object that took two points to use strong typedefs.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Renamed <code>FCPPT_MAKE_STRONG_TYPEDEF</code> to #FCPPT_DECLARE_STRONG_TYPEDEF.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_400 4.0.0

<p>
fcppt now uses <code>C++-20</code>. Some functions were updated to use concepts, but this is still a work in progress.
</p>

<p>
Metal is no longer required.
</p>

\subsection changes_added_functionality_to_400 Added functionality

<ul>

<li>\ref fcpptconcepts
	<p>
	New library with various C++20 concepts.
	</p>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added #fcppt::container::uncons.</li>
	</ul>
</li>

<li>\ref fcpptmpl
	<p>
	New library that replaces Metal.
	</p>
</li>

<li>\ref fcpptparse
	<ul>
	<li>Added #fcppt::parse::skipper::alternative, #fcppt::parse::skipper::any, #fcppt::parse::skipper::comment, #fcppt::parse::skipper::not_
	and #fcppt::parse::skipper::string.</li>
	<li>Added #fcppt::parse::with_location.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added support for #fcppt::algorithm::loop_break and #fcppt::algorithm::map.</li>
	<li>Added #fcppt::record::make.</li>
	<li>Exposed #fcppt::record::element_init, which was previously a member of <code>detail::</code>.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Added #fcppt::extract_from_string_fmt that allows to pass format flags.</li>
	<li>#fcppt::extract_from_string now also accepts rvalue strings.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added #fcppt::type_traits::is_integral_constant.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added #fcppt::variant::partition.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::output has been added. Its behaviour can be specialized via #fcppt::output_impl.
	The default implementation uses <code>operator<<</code>.</li>
	<li>Added support for #fcppt::deref to #fcppt::recursive.</li>
	<li>Added <code>operator-></code> to #fcppt::recursive.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_400 Changed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>The result type of #fcppt::algorithm::find_by_opt now has to be specified explicitly.
	This makes the algorithm work on heterogeneous ranges (like tuples) as well.
	</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>The result type of #fcppt::either::sequence is now the full either type instead of its success type.
	This makes the function work on heterogeneous ranges (like tuples) as well.
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li><code>fcppt::extract_from_string_locale</code> has been renamed
	to #fcppt::extract_from_string_locale_fmt and has gained an additional
	format flags parameter.</li>
	</ul>
</li>

<li>\ref fcppttime
	<ul>
	<li>#fcppt::time::gmtime, #fcppt::time::localtime and #fcppt::time::std_time now use <code>std::exception</code> instead of #fcppt::exception.</li>
	<li>#fcppt::time::output_tm is now a template over the char and traits types.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_400 Removed functionality

<ul>

<li>\ref fcpptassert
	<ul>
	<li>Removed <code>FCPPT_ASSERT_UNIMPLEMENTED_MESSAGE</code>.</li>
	<li>Removed <code>FCPPT_ASSERT_PRE</code> and <code>FCPPT_ASSERT_PRE_MESSAGE</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::contains</code>. In C++20, maps have a <code>contains</code> member function.</li>
	</ul>
</li>

<li>\ref fcpptendianness
	<ul>
	<li>Removed <code>fcppt::endianness::format</code>, <code>fcppt::endianness::is_big_endian</code>, <code>fcppt::endianness::is_little_endian</code> and <code>fcppt::endianness::host_format</code>.
	Use <code>std::endian</code> instead.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::pi</code> and <code>fcppt::math::twopi</code>. Use <code>std::numbers::pi_v</code> instead.</li>
	</ul>
</li>

<li>fcpptmetal
	<p>
	This has been removed in favor of \ref fcpptmpl.
	</p>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Removed <code>fcppt::optional::const_cast_</code>, <code>fcppt::optional::dynamic_cast_</code> and <code>fcppt::optional::static_cast_</code>.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed <code>fcppt::type_traits::remove_cv_ref_t</code>. Use <code>std::remove_cvref_t</code>.</li>
	<li>Removed <code>fcppt::type_traits::function_result</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_float_or_double</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_400 Bugfixes

<ul>

<li>\ref fcpptstring
	<ul>
	<li>Fixed failure condition of #fcppt::extract_from_string, #fcppt::extract_from_string_fmt and #fcppt::extract_from_string_locale_fmt.
	It was previously possible that every character of the string has been consumed but EOF has not been reached either.
	</li>
	</ul>
</li>

</ul>

\section changes_changes_to_380 3.8.0

\subsection changes_added_functionality_to_380 Added functionality

<ul>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>The output operator of #fcppt::container::bitfield::object now works on arbitrary char types.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>#fcppt::enum_::input, #fcppt::enum_::output and the output operator of #fcppt::enum_::array now work on arbitrary char types.</li>
	</ul>
</li>

<li>fcpptmetal
	<ul>
	<li><code>fcppt::metal::print</code> now works on arbitrary char types.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::narrow_string and #fcppt::io::narrow_string_locale.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_380 Changed functionality

<ul>
<li>The deprecated <code>std::result_of_t</code> has been replaced with <code>std::invoke_result_t</code>.</li>
<li>Deprecated member typedefs of <code>std::allocator</code> have been replaced with <code>std::allocator_traits</code>.</li>

<li>\ref fcpptcasts
	<ul>
	<li>#fcppt::cast::truncation_check now returns an optional.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>#fcppt::container::bitfield::object can now only be used with enums.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Enum names now use <code>std::string</code>. The function #fcppt::enum_::to_string in particular returns a <code>std::string_view</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>#fcppt::math::clamp now returns an optional.</li>
	</ul>
</li>

<li>fcpptmetal
	<ul>
	<li><code>fcppt::metal::sequence_to_string</code> now returns a <code>std::string</code></li>.
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>#fcppt::error::strerror now uses <code>std::system_error</code> internally
	instead of the potentially not thread-safe <code>std::strerror</code> function.</li>
	</ul>
</li>

<li>\ref fcppttime
	<ul>
	<li>#fcppt::time::gmtime and #fcppt::time::localtime now use thread-safe versions
	of the corresponding standard C functions.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::version_string now returns a <code>std::string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_380 Removed functionality

<ul>

<li>\ref fcpptassert
	<ul>
	<li>Removed <code>FCPPT_ASSERT_THROW</code>, <code>FCPPT_ASSERT_THROW_MESSAGE</code>,
	<code>FCPPT_ASSERT_POST</code> and <code>FCPPT_ASSERT_POST_MESSAGE</code>.</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::dynamic_cross_exn</code> and <code>fcppt::cast::dynamic_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::bitfield::enum_object</code>.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Removed <code>fcppt::enum_::from_int_exn</code>.</li>
	<li>Removed customization point for #fcppt::enum_::names and default implementation of #fcppt::enum_::to_string_impl.</li>
	</ul>
</li>

<li>\ref fcppttime
	<ul>
	<li>Removed <code>fcppt::time::ctime</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::get_exn</code>.</li>
	<li>Removed <code>fcppt::variant::types_string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_380 Bugfixes

<ul>
<li>
Fixed a gcc-11 issue regarding parameter expansion.
</li>
</ul>

\section changes_changes_to_370 3.7.0

\subsection changes_added_functionality_to_370 Added functionality

<ul>
<li>\ref fcpptarray
	<p>New library.
	The difference between <code>std::array</code> is that
	#fcppt::array::object does not allow default construction.
	</p>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Allow movable types.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Allow movable types.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Allow movable types.</li>
	</ul>
</li>

<li>fcpptmetal
	<ul>
	<li>Added <code>fcppt::metal::is_invocable</code>.</li>
	</ul>
</li>

<li>\ref fcpptparse
	<p>
	Added documentation.
	</p>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added <code>noexcept</code> and <code>constexpr</code>.</li>
	</ul>
</li>

<li>\ref fcppttuple
	<p>New library.
	The difference between <code>std::tuple</code> is that
	#fcppt::tuple::object does not allow default construction.
	</p>
</li>
</ul>

\subsection changes_removed_functionality_to_370 Removed functionality

<ul>

<li>fcpptcontainerarray
	<p>
	This has been removed in favor of \ref fcpptarray.
	</p>
</li>

<li>fcpptcontainertuple
	<p>
	This has been removed in favor of \ref fcppttuple.
	</p>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Removed <code>fcppt::homogenous_pair</code>.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed <code>fcppt::type_traits::is_std_array</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_std_tuple</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_360 3.6.0

\subsection changes_added_functionality_to_360 Added functionality

<ul>

<li>\ref fcpptfilesystem
	<ul>
	<li>Allow #fcppt::filesystem::open and #fcppt::filesystem::open_exn to open filebufs as well.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::cond.</li>
	<li>Added #FCPPT_CHAR_LITERAL.</li>
	<li>Allow more character types in #FCPPT_STRING_LITERAL.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_360 Changed functionality

<ul>

<li>\ref fcpptio
	<ul>
	<li>Changed #fcppt::io::basic_scoped_rdbuf to use a stream and a streambuf instead of two streams.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>#fcppt::math::next_power_of_2 is now the identity on powers of two.
	It will also now return 1 when called with 0.</li>
	</ul>
</li>

<li>\ref fcpptrandom
	<ul>
	<li>Use #fcppt::reference in places where classes hold on to references, namely
	in #fcppt::random::wrapper::uniform_container and #fcppt::random::variate.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_360 Bugfixes

<ul>
<li>Fix clang-11 issues with destructor names.</li>
</ul>

\section changes_changes_to_350 3.5.0

\subsection changes_added_functionality_to_350 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Use #fcppt::algorithm::loop_break in #fcppt::algorithm::contains_if.</li>
	<li>Added #fcppt::algorithm::map_impl specialization for <code>fcppt::container::tuple::map</code>.</li>
	</ul>
</li>

<li>fcpptcontainerarray
	<ul>
	<li>Added <code>fcppt::container::array::from_range</code>.</li>
	</ul>
</li>

<li>fcpptcontainertuple
	<ul>
	<li>Added <code>fcppt::container::tuple::apply</code>.</li>
	<li>Added <code>fcppt::container::tuple::from_array</code>.</li>
	<li>Added <code>fcppt::container::tuple::init</code>.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Added #fcppt::filesystem::make_directory_range.</li>
	<li>Added #fcppt::filesystem::make_recursive_directory_range and #fcppt::filesystem::recursive_directory_range.</li>
	</ul>
</li>

<li>fcpptmetal
	<ul>
	<li>Added <code>fcppt::metal::function_args</code>.</li>
	<li>Added <code>fcppt::metal::contains</code>, which returns a boolean instead of a <code>metal::number</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>#fcppt::optional::sequence now works on <code>std::tuple</code>.</li>
	</ul>
</li>

<li>\ref fcpptpreprocessor
	<ul>
	<li>Added #FCPPT_PP_DISABLE_GNU_GCC_WARNING, which disables warnings on GCC but not on Clang.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Added #fcppt::system.</li>
	<li>Added #fcppt::insert_extract_locale as a replacement for the <code>=std::locale()</code> parameters.</li>
	<li>Added variants of various functions taking a locale:
	This includes <code>fcppt::extract_from_string_locale</code>, #fcppt::from_std_string_locale, #fcppt::from_std_wstring_locale
	#fcppt::narrow_locale, #fcppt::output_to_string_locale, #fcppt::output_to_std_string_locale,
	#fcppt::output_to_std_wstring_locale, #fcppt::to_std_string_locale, #fcppt::to_std_wstring_locale and #fcppt::widen_locale.</li>
	</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::overload.</li>
	<li>Added #FCPPT_NONMOVABLE.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_350 Changed functionality

<ul>

<li>\ref fcpptfilesystem
	<ul>
	<li>Changed constructor of #fcppt::filesystem::directory_range to return an error code.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<ul>
	<li>Use #fcppt::reference to pass #fcppt::log::context to #fcppt::log::object.</li>
	</ul>
</li>

<li>fcpptmetal
	<ul>
	<li><code>fcppt::metal::set::contains</code> now returns a boolean instead of a <code>metal::number</code>.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Callbacks are now moved into signals.</li>
	</Ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Made the conversion constructor of #fcppt::shared_ptr explicit.</li>
	<li>Made the #fcppt::weak_ptr constructor from #fcppt::shared_ptr explicit.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Removed the default <code>=std::locale()</code> parameter from
	#fcppt::extract_from_string, #fcppt::from_std_string, #fcppt::from_std_wstring
	#fcppt::narrow, #fcppt::output_to_string, #fcppt::output_to_std_string,
	#fcppt::output_to_std_wstring, #fcppt::to_std_string, #fcppt::to_std_wstring and #fcppt::widen.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed nested <code>type</code> from <code>fcppt::type_traits::function_result</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_350 Removed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::safe</code>.</li>
	</ul>
</li>

<li>fcpptcontainertuple
	<ul>
	<li>Removed <code>fcppt::container::tuple::type_at</code>. Use <code>std::tuple_element</code>.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed <code>fcppt::type_traits::constructible_from</code>. Use <code>std::is_constructible</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_340 3.4.0

<ul>
<li>
Replaced Brigand with Metal.
</li>
</ul>

\subsection changes_added_functionality_to_340 Added functionality

<ul>

<li>\ref fcppttypetraits
	<ul>
	<li>Added #fcppt::type_traits::safe_integral_cast.</li>
	<li>Added #fcppt::type_traits::to_bool.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::deref and #fcppt::deref_type.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_340 Changed functionality

<ul>
<li>Moved <code>fcppt::brigand::implication</code> to #fcppt::type_traits::implication.</li>
<li>Moved <code>fcppt::brigand::integral_cast</code> to #fcppt::type_traits::integral_cast.</li>
<li>Moved <code>fcppt::brigand::ceil_div</code> to #fcppt::math::ceil_div_static.</li>

<li>\ref fcpptrecord
	<ul>
	<li>#fcppt::record::object is now a variadic template.
	Removed <code>fcppt::record::variadic</code> and added #fcppt::record::from_list.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>#fcppt::variant::object is now a variadic template.
	Removed <code>fcppt::variant::variadic</code> and added #fcppt::variant::from_list.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_330 3.3.0

<ul>
<li>
fcppt now uses <code>std::filesystem</code>.
</li>
</ul>

\subsection changes_added_functionality_to_330 Added functionality

<ul>

<li>\ref fcpptrange
	<ul>
	<li>Added #fcppt::range::begin and #fcppt::range::end that call begin/end via ADL.</li>
	<li>Added #fcppt::range::from_pair.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_330 Removed functionality

<ul>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::create_directory_error</code>.</li>
	</ul>
</li>

<li>Removed the fcpptsystem library.
</li>

</ul>

\section changes_changes_to_322 3.2.2

\subsection changes_bugfixes_to_322 Bugfixes

<ul>

<li>\ref fcpptsmartptr
	<ul>
	<li>Fix #fcppt::unique_ptr assignment.</li>
</li>

</ul>

\section changes_changes_to_321 3.2.1

\subsection changes_bugfixes_to_321 Bugfixes

<ul>
<li>Fix Doxygen links.</li>
</ul>

\section changes_changes_to_320 3.2.0

\subsection changes_added_functionality_to_320 Added functionality

<ul>

<li>fcpptcontainerarray
	<ul>
	<li>Added <code>fcppt::container::array::append</code> and <code>fcppt::container::array::join</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Added <code>operator<<</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added initialization using #fcppt::container::grid::static_row.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>operator<<</code> for #fcppt::enum_::array.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Added #fcppt::string_view.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_320 Changed functionality

<ul>

<li>\ref fcpptcontainertree
	<ul>
	<li>Renamed <code>fcppt::container::tree::output</code> to <code>operator<<</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Changed #fcppt::options::error to a string.
	#fcppt::options::missing_error and <code>fcppt::options::other_error</code> were moved to #fcppt::options::parse_error.</li>
	<li>Moved <code>fcppt::options::combine_errors</code> to detail.</li>
	<li>#fcppt::options::missing_error can now return a state, making optional parsers more efficient.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_310 3.1.0

\subsection changes_added_functionality_to_310 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Allow rvalues in #fcppt::algorithm::loop_break,
	#fcppt::algorithm::loop and #fcppt::algorithm::fold.</li>
	</ul>
</li>

<li>\ref fcpptcatch
	<p>
	Output operators now recurse into Catch's output code instead
	of using <code>operator<< </code>.
	</p>
	<ul>
	<li>Added Catch output for #fcppt::record::object,
	#fcppt::strong_typedef and #fcppt::optional::object.</li>
	<li>Added #fcppt::catch_::convert.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added <code>fcppt::container::contains</code>.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added #fcppt::either::construct.</li>
	<li>Added #fcppt::either::loop.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added #fcppt::record::enable_vararg_ctor.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #FCPPT_STRING_LITERAL.</li>
	<li>Added #fcppt::recursive.</li>
	<li>Added #fcppt::make_function.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_310 Changed functionality

<ul>

<li>\ref fcppteither
	<ul>
	<li>Renamed <code>fcppt::either::fold_error</code> to #fcppt::either::sequence_error.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>#fcppt::io::stream_to_string now returns an optional.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_310 Removed functionality

<ul>

<li>\ref fcpptboost
	<ul>
	<li>Removed spirit traits.</li>
	</ul>
</li>

<li>\ref fcpptcatch
	<ul>
	<li>Removed <code>fcppt::catch_::defer</code>.</li>
	</ul>
</li>

<li>fcpptcontainertuple
	<ul>
	<li>Removed <code>fcppt::container::tuple::to_varargs</code>. Use <code>std::apply</code>.</li>
	</ul>
</li>

<li>\ref fcpptpreprocessor
	<ul>
	<li>Removed <code>FCPPT_PP_WARN_UNUSED_RESULT</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_300 3.0.0

<p>
fcppt now uses <code>C++-17</code>.
</p>

\subsection changes_added_functionality_to_300 Added functionality

<ul>

<li><code>fcpptbrigand</code>
	<ul>
	<li>Added <code>fcppt::brigand::is_set</code>.</li>
	<li>Added <code>fcppt::brigand::unique</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_300 Changed functionality

<ul>
<li>\ref fcpptoptional
	<ul>
	<li>Now uses <code>std::optional</code> in its implementation.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>All labels of a record must be distinct now.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>

	Now uses <code>std::variant</code> in its implementation. This change makes the constructor
	of #fcppt::variant::object stricter,
	since it now uses <code>std::is_constructible</code>. For example, an rvalue of a type that is
	not movable cannot be used to construct a variant.
	</li>
	<li>
	Removed the assignment operator of #fcppt::variant::object that assigned
	an underlying value. Assign a new variant instead.
	</li>
	<li>
	Moved <code>fcppt/variant/less.hpp</code>, <code>fcppt/variant/equal.hpp</code>
	and <code>fcppt/variant/not_equal.hpp</code>. into <code>fcppt/variant/comparison.hpp</code>.
	</li>
	<li>All types of a variant must be distinct now.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_2100 2.10.0

\subsection changes_added_functionality_to_2100 Added functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Added additional <code>constexpr</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li><code>external_begin.h(pp)</code> and <code>external_end.h(pp)</code> includes can now overlap.</li>
	</ul>
</li>

<li>\ref fcpptpreprocessor
	<ul>
	<li>Added #FCPPT_PP_DISABLE_CLANG_WARNING.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_2100 Changed functionality

<ul>

<li>\ref fcpptlog
	<ul>
	<li>Renamed <code>fcppt::log::_</code> to #fcppt::log::out.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_2100 Removed functionality

<ul>

<li>\ref fcpptvarious
	<ul>
	<li>Removed <code>FCPPT_NONASSIGNABLE</code>.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_290 2.9.0

\subsection changes_added_functionality_to_290 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::split_string.</li>
	<li>Added #fcppt::algorithm::map_impl as a customization point for #fcppt::algorithm::map.</li>
	</ul>
</li>

<li>fcpptcontainertuple
	<ul>
	<li>Move rvalue references out of tuples regardless whether the tuples are rvalues themselves.</li>
	<li>Added <code>fcppt::container::tuple::move_element</code>.</li>
	<li>Added <code>fcppt::container::tuple::type_at</code>.</li>
	<li>Added <code>fcppt::container::tuple::types_of</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::peek.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Added <code>fcppt::options::indent</code> and added indentation to various parser outputs.</li>
	<li>Added <code>fcppt::options::combine_errors</code> and use it in #fcppt::options::sum.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added #fcppt::variant::apply.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_290 Changed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>To use #fcppt::algorithm::map on <code>std::array</code>, you have to include
	<code>fcppt/algorithm/map_array.hpp</code>.</li>
	<li>Moved <code>fcppt::algorithm::join</code> to #fcppt::container::join.</li>
	<li>Moved <code>fcppt::algorithm::key_set</code> to #fcppt::container::key_set.</li>
	<li>Moved <code>fcppt::algorithm::set_difference</code> to #fcppt::container::set_difference.</li>
	<li>Moved <code>fcppt::algorithm::set_intersection</code> to #fcppt::container::set_intersection.</li>
	<li>Moved <code>fcppt::algorithm::set_union</code> to #fcppt::container::set_union.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Changed #fcppt::options::sum to return a record containing a variant.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>String conversions that can fail now return optionals, notably #fcppt::narrow, #fcppt::to_std_string and #fcppt::from_std_wstring.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::type_name, #fcppt::type_name_from_info and #fcppt::type_name_from_index now return <code>std::string</code>,</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_290 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::append</code>.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::file_to_string</code>.</li>
	<li>Removed <code>fcppt::filesystem::size_to_size_t</code>.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Removed <code>fcppt::output_to_std_string_convert</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::apply_unary</code>, <code>fcppt::variant::apply_binary</code> and <code>fcppt::variant::apply_ternary</code>.
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_290 Bugfixes

<ul>

<li>
Updated catch includes to use <code>catch2/catch.hpp</code>.
</li>

<li>\ref fcpptintrusive
	<ul>
	<li>Fixed assignment of #fcppt::intrusive::base.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Use <code>std::set</code> instead of <code>std::unordered_set</code> so that
	<code>set_union</code> actually works.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Fixed string conversion when partial writes occur that don't write anything.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_280 2.8.0

\subsection changes_general_to_280 General changes

<ul>
<li>
Replaced <code>boost.test</code> with <code>Catch2</code>.
This means that in order to build the tests (<code>-D ENABLE_TEST=ON</code>),
Catch2 is now required.
</li>
</ul>

\subsection changes_added_functionality_to_280 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::unique and #fcppt::algorithm::unique_if.</li>
	</ul>
</li>

<li>fcpptcontainerarray
	<ul>
	<li>Allow rvalues in <code>fcppt::container::array::push_back</code>.</li>
	<li>Added <code>fcppt::container::array::apply</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added #fcppt::container::grid::dim_type and #fcppt::container::grid::pos_type.</li>
	</ul>
</li>

<li>fcpptcontainertuple
	<ul>
	<li>Added <code>fcppt::container::tuple::push_back</code>.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added #fcppt::either::failure_type and #fcppt::either::success_type.</li>
	<li>Added #fcppt::either::join.</li>
	</ul>
</li>

<li>\ref fcpptiterator
	<ul>
	<li>Added <code>operator==</code> to #fcppt::iterator::range.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<ul>
	<li>Added #fcppt::range::size.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Added #fcppt::options::commands, which parses sub-commands.</li>
	<li>Added #fcppt::options::unit_switch and #fcppt::options::unit.</li>
	<li>Added #fcppt::options::sum.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added #fcppt::record::all_disjoint.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Added <code>fcppt::output_to_std_string_convert</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added #fcppt::strong_typedef_apply.</li>
	<li>Added #fcppt::strong_typedef_map.</li>
	<li>Added #fcppt::strong_typedef_tag.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added <code>fcppt::type_traits::remove_cv_ref_t</code>.</li>
	<li>Added #fcppt::type_traits::value_type.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::copy.</li>
	<li>Added #fcppt::not_.</li>
	<li>Added #fcppt::hash_combine and #fcppt::hash.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_280 Changed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Moved <code>fcppt::algorithm::array_map</code>,
	<code>fcppt::algorithm::array_init</code>, <code>fcppt::algorithm::array_init_const</code>,
	<code>fcppt::algorithm::array_init_move</code>, <code>fcppt::algorithm::array_push_back</code>
	and <code>fcppt::container::make_array</code>
	to fcpptcontainerarray.</li>
	<li>Renamed <code>fcppt::algorithm::vararg_map</code> to <code>fcppt::container::tuple::vararg_map</code>.</li>
	</ul>
</li>

<li>fcpptassign
	<ul>
	<li>Moved <code>fcppt::assign::make_container</code> to #fcppt::container::make.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::untuple</code> to <code>fcppt::container::tuple::to_varargs</code>.</li>
	</ul>
</li>

<li>fcpptcontainerarray
	<ul>
	<li><code>fcppt::container::array::map</code> no longer uses an explicit result type.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Renamed <code>fcppt::math::dim::construct</code> to #fcppt::math::dim::push_back.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Renamed <code>fcppt::math::vector::construct</code> to #fcppt::math::vector::push_back.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>The active and inactive values in #fcppt::options::flag must be different now.</li>
	<li>All long and short names must be distinct now.</li>
	<li>All parsers and their parameters are now passed as rvalue references.
	Use #fcppt::make_cref or #fcppt::copy to pass them.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Renamed <code>fcppt::insert_to*_string</code> to <code>fcppt::output_to*_string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_280 Removed functionality

<ul>

<li>Removed <code>fcppt.mpl</code>.</li>

<li>\ref fcpptalgorithm
	<ul>
	<li> Removed <code>fcppt::algorithm::array_binary_map</code>. This has been replaced by <code>fcppt::container::array::apply</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_280 Bugfixes

<ul>

<li>\ref fcpptintrusive
	<ul>
	<li>Fixed unlinking of the last element.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_270 2.7.0

\subsection changes_general_to_270 General changes

<ul>
<li>
Boost is now optional, which can be controlled by the <code>ENABLE_BOOST</code> CMake flag. It defaults
to <code>ON</code> if Boost is found. To build <code>fcppt_filesystem</code>, <code>fcppt_system</code>
or fcppt's tests, Boost is still required.
Furthermore, all Boost-specific functionality has been moved to <code>fcppt_boost</code>.
To replace <code>boost::mpl</code>, <code>Brigand</code> has been added as a dependency, which
can be obtained from <a href="https://github.com/edouarda/brigand">here</a>. It is a small, header-only
C++11 library that has no dependencies itself.</li>
<li>Removed <code>-Weffc++</code> warning. Unfortunately, this warning has become even more broken in <code>gcc-8</code>.</li>
</ul>

\subsection changes_added_functionality_to_270 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Allow <code>std::array</code> in #fcppt::algorithm::map.</li>
	<li>Allow rvalues in <code>fcppt::algorithm::array_map</code>.</li>
	</ul>
</li>

<li><code>fcpptbrigand</code>
	<p>
	New library for brigand utility functions.
	</p>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Added #fcppt::cast::promote_int.</li>
	<li>Added #fcppt::cast::to_uint_ptr.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added #fcppt::container::map_values_ref and #fcppt::container::map_values_copy.</li>
	<li>Added #fcppt::container::insert.</li>
	<li>Added #fcppt::container::pop_front.</li>
	<li>Allow move-only types in #fcppt::container::pop_front and #fcppt::container::pop_back.</li>
	<li>Added #fcppt::container::size.</li>
	</ul>
</li>

<li>\ref fcpptintrusive
	<p>New library that is a simple replacement for <code>boost::intrusive::list</code>.
	It only supports movable types. Furthermore, an element must be initialized
	with the list it is going to be a member of.
	</p>
</li>

<li>\ref fcpptiterator
	<p>New library that provides a base class to implement iterators from
	and an iterator range.</p>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added #fcppt::math::div.</li>
	<li>Added #fcppt::math::is_zero.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Added #fcppt::math::dim::binary_map.</li>
	<li>Added #fcppt::math::dim::sequence.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added #fcppt::math::matrix::binary_map.</li>
	<li>Added #fcppt::math::matrix::map.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Added #fcppt::math::vector::binary_map.</li>
	<li>Added #fcppt::math::vector::sequence.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::sequence.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<p>
	New library that implements some utility functions for ranges.
	</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added #fcppt::record::element_tag_tuple.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added #fcppt::is_reference.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added <code>fcppt::type_traits::function_result</code>.</li>
	<li>Added #fcppt::type_traits::is_value.</li>
	<li>Added <code>fcppt::type_traits::is_std_tuple</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::move_clear.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_270 Changed functionality

<ul>

<li>\ref fcpptcontainertree
	<ul>
	<li>Removed nonconst access to the children list.</li>
	<li>#fcppt::container::tree::object::front and #fcppt::container::tree::object::back now return optional references.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<ul>
	<li>Removed <code>boost::format</code> from #fcppt::log::format::inserter.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>#fcppt::math::ceil_div and #fcppt::math::ceil_div_signed now return optionals.</li>
	<li>#fcppt::math::mod now returns an optional.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>All versions of <code>operator/</code> now return optionals.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>#fcppt::math::vector::ceil_div_signed now returns an optional.</li>
	<li>#fcppt::math::vector::mod now returns an optional.</li>
	<li>#fcppt::math::vector::atan2 now returns an optional.</li>
	<li>#fcppt::math::vector::angle_between, #fcppt::math::vector::angle_between_cast,
	#fcppt::math::vector::signed_angle_between and #fcppt::math::vector::signed_angle_between_cast
	now return optionals.</li>
	<li>All versions of <code>operator/</code> now return optionals.</li>
	</ul>
</li>

<li>\ref fcpptrange
	<ul>
	<li>Moved <code>fcppt::range_hash</code> to #fcppt::range::hash.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed <code>make_strong_typedef.hpp</code> from <code>strong_typedef.hpp</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_270 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::levenshtein</code> and <code>fcppt::algorithm::shortest_levenshtein</code>,</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::promote</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::to_array_type_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Removed <code>operator%</code>, <code>operator%=</code> and <code>operator/=</code>.</li>
	<li>Removed <code>operator+</code> and <code>operator-</code> that took a scalar.</li>
	<li>Removed unary <code>operator+</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Removed <code>operator/=</code> and <code>operator/</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Removed <code>operator%</code>, <code>operator%=</code> and <code>operator/=</code>.</li>
	<li>Removed <code>operator+</code> and <code>operator-</code> that took a scalar.</li>
	<li>Removed unary <code>operator+</code>.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<p>This library is in the process of being replaced by <code>fcpptbrigand></code>.</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Removed <code>fcppt::record::disjoint_product_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_map_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_to_label_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_to_type_tpl</code>,</li>
	<li>Removed <code>fcppt::record::element_vector_tpl</code>,</li>
	<li>Removed <code>fcppt::record::label_set_tpl</code>,</li>
	<li>Removed <code>fcppt::record::label_value_type_tpl</code>,</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed <code>operator/</code>, <code>operator/=</code>, <code>operator%</code> and <code>operator%=</code>.</li>
	<li>Removed the unary <code>operator+</code>.</li>
	<li>Removed the shift operators <code>operator<<</code>, <code>operator<<=</code>, <code>operator>></code> and <code>operator>>=</code>.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Removed <code>fcppt::type_traits::is_iterable</code>, <code>fcppt::type_traits::has_iterator</code> and <code>fcppt::type_traits::has_const_iterator</code>.</li>
	<li>Removed <code>FCPPT_TYPE_TRAITS_GENERATE_HAS_TYPE</code> and <code>FCPPT_TYPE_TRAITS_GENERATE_HAS_MEMBER_FUNCTION</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_iterator</code>.</li>
	<li>Removed <code>fcppt::type_traits::function_pointer_to_reference</code>.</li>
	<li>Removed <code>fcppt::type_traits::is_input_iterator</code>, <code>fcppt::type_traits::is_output_iterator</code>,
	<code>fcppt::type_traits::is_forward_iterator</code>, <code>fcppt::type_traits::bidirectional_iterator</code> and
	<code>fcppt::type_traits::is_random_access_iterator</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::types_of_tpl</code>.</li>
	</ul>
</li>

</ul>


\section changes_changes_to_260 2.6.0

\subsection changes_added_functionality_to_260 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::equal.</li>
	<li><code>fcppt::algorithm::append</code> now also works on rvalues.</li>
	<li>#fcppt::algorithm::map now uses #fcppt::algorithm::loop, so it works on different ranges.</li>
	<li>Allow <code>fcppt::algorithm::join</code> to join maps and sets.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added #fcppt::container::dynamic_array which is a simple array for uninitialized, dynamically-sized storage.</li>
	<li>Added #fcppt::container::output that outputs a container to a stream.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbuffer
	<p>
	This sub-library adds #fcppt::container::buffer::object and utility functions which can be used to provide a buffer to external functions that write into raw memory.
	The buffer contains a read and a write area.
	</p>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Added #FCPPT_CONFIG_MSVC_VERSION_AT_LEAST.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added #fcppt::either::map_failure.</li>
	<li>Added #fcppt::either::error, #fcppt::either::no_error, <code>fcppt::either::fold_error</code> and #fcppt::either::error_from_optional.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>fcppt::enum_::names</code> and <code>fcppt::enum_::names_impl</code>.
	<li>Added #fcppt::enum_::from_string and #fcppt::enum_::from_string_impl.
	<li>Added #fcppt::enum_::to_string and #fcppt::enum_::to_string_impl.
	<li>Added #fcppt::enum_::input and #fcppt::enum_::output.
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Added #fcppt::filesystem::create_directory, <code>fcppt::filesystem::create_directory_error</code> and #fcppt::filesystem::create_directories_recursive.</li>
	<li>Added #fcppt::filesystem::file_size.</li>
	<li>Added <code>fcppt::filesystem::size_to_size_t</code>.</li>
	<li>Added #fcppt::filesystem::open and #fcppt::filesystem::open_exn.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::write_chars.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added safe accessors for matrices up to a size of <code>4 x 4</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::to_container.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Output errors from the second argument as well in #fcppt::options::product.</li>
	<li>Added <code>fcppt/options/pretty_type_enum.hpp</code> that outputs all possible enumerators via #fcppt::enum_::names.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added <code>fcppt::add_reference</code>.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Added #fcppt::unique_ptr_from_std.</li>
	<li>Added #fcppt::unique_ptr_dynamic_cast.</li>
	<li>Added #fcppt::shared_ptr_hash and the corresponding <code>std::hash</code> specialization.</li>
	<li>Added #fcppt::enable_shared_from_this.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added nonconst get function.</li>
	</ul>
</li>

<li>fcpptsystem
	<p>
	New library that wraps some functionality from <code>boost.system</code>.
	</p>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #FCPPT_MAIN as a name for the <code>main</code> function to support unicode arguments in Windows.</li>
	<li>Added <code>operator==</code>, <code>operator!=</code> and <code>operator<< </code> for #fcppt::unit.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_260 Changed functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li><code>find_package(fcppt)</code> now adds fcppt's module path to <code>CMAKE_MODULE_PATH</code>.</li>
	<li>fcppt now uses <code>GNUInstallDirs.cmake</code> instead of its own variables.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::raw_vector</code> to #fcppt::container::raw_vector::object.</li>
	<li>Moved comparison functions of #fcppt::container::raw_vector::object to <code>fcppt/container/raw_vector/comparison.hpp</code>.</li>
	<li>Redesigned #fcppt::container::raw_vector::object. It now only exposes essential functions and is no longer being meant as a replacement for <code>std::vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Renamed <code>operator[]</code> of #fcppt::container::grid::object to #fcppt::container::grid::object::get_unsafe.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<p>
	Moved most functionality that is related to contiguous enums to the #fcppt::enum_ namespace.
	</p>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li><code>fcppt::filesystem::file_to_string</code> now returns #fcppt::optional_string for most errors.</li>
	<li>#fcppt::filesystem::ifstream, #fcppt::filesystem::ofstream and #fcppt::filesystem::fstream now use <code>std::basic_ifstream</code>,
	<code>std::basic_ofstream</code> and <code>std::basic_fstream</code> instead of the boost variants.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Split <code>fcppt::math::at_c</code> into #fcppt::math::vector::at, #fcppt::math::dim::at and #fcppt::math::matrix::at_r.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Renamed <code>operator[]</code> of #fcppt::math::dim::object to #fcppt::math::dim::object::get_unsafe.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Renamed <code>operator[]</code> of #fcppt::math::matrix::object to #fcppt::math::matrix::object::get_unsafe.</li>
	<li>Renamed <code>fcppt::math::matrix::at_c</code> to #fcppt::math::matrix::at_r_c.</li>
	<li>Renamed <code>fcppt::math::matrix::delete_row_and_column_static</code> to #fcppt::math::matrix::delete_row_and_column.</li>
	<li>#fcppt::math::matrix::row_type is now an #fcppt::math::vector::static_ instead of a <code>std::array</code>.</li>
	<li>#fcppt::math::matrix::index now uses functions that return its row and column instead of static constants.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Renamed <code>operator[]</code> of #fcppt::math::vector::object to #fcppt::math::vector::object::get_unsafe.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<ul>
	<li>Renamed <code>fcppt::options::custom_pretty_type</code> to #fcppt::options::pretty_type_impl.</li>
	<li>Don't output values of flags. Output operators are usually not defined or their results are meaningless to the user.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Signals with a result now get the initial value when called instead of at construction time, which allows rvalues to be used.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Moved output operator of #fcppt::shared_ptr to <code>fcppt/shared_ptr_output.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Changed #fcppt::variant::dynamic_cast_ to take an MPL sequence of the types to cast instead of an MPL sequence of references.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::args and #fcppt::args_from_second now use #fcppt::args_char instead of <code>char</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_260 Removed functionality

<ul>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::is_std_vector</code>.</li>
	<li>Removed <code>fcppt::container::is_raw_vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed constructor taking #fcppt::no_init. The underlying container is now always a <code>std::vector</code>.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Removed <code>fcppt::filesystem::exception</code>.</li>
	<li>Removed <code>fcppt::filesystem::create_directories_recursive_exn</code> and <code>fcppt::filesystem::create_directory_exn</code>.</li>
	<li>Removed <code>fcppt::filesystem::is_executable</code> which is covered by <code>boost.filesystem</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Removed the dynamic version of <code>fcppt::math::matrix::delete_row_and_column</code>.</li>
	</ul>
</li>

\subsection changes_bugfixes_to_260 Bugfixes

<ul>

<li>\ref fcpptsignal
	<ul>
	<li>Don't forward arguments into signal because they have to be used multiple times.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Fixed initialization of <code>std::mbstate_t</code> when doing character conversions.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Fixed moving of nested variants.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_251 2.5.1

\subsection changes_added_functionality_to_251 Added functionality

<ul>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::sequence_to_string</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added #fcppt::variant::types_of and <code>fcppt::variant::types_of_tpl</code>.</li>
	<li>Added move semantics to <code>fcppt::variant::apply_unary</code>, <code>fcppt::variant::apply_binary</code> and <code>fcppt::variant::apply_ternary</code>.</li>
	<li>Improved the error message of <code>fcppt::variant::invalid_get</code>.</li>
	<li>Added <code>fcppt::variant::types_string</code>.</li>
	<li>Added #fcppt::variant::current_type_name.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_250 2.5.0

\subsection changes_added_functionality_to_250 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::reverse.</li>
	<li>Move rvalues in #fcppt::algorithm::map.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added #fcppt::container::move_range and #fcppt::container::make_move_range.</li>
	<li>Added #fcppt::container::pop_back.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::extract which can also read objects of types that take #fcppt::no_init.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<ul>
	<li>Added <code>operator<<</code> and <code>operator>></code> for #fcppt::log::level.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added #fcppt::math::to_array_type, <code>fcppt::math::to_array_type_tpl</code>, #fcppt::math::from_array and #fcppt::math::to_array.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::set_intersection</code>.</li>
	<li>Added <code>fcppt::mpl::set_union</code>.</li>
	<li>Added <code>fcppt::mpl::set_difference</code>.</li>
	<li>Added <code>fcppt::mpl::set_symmetric_difference</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::make_if.</li>
	<li>Added #fcppt::optional::nothing.</li>
	</ul>
</li>

<li>\ref fcpptoptions
	<p>
	New library for parsing command-line options, similar to Haskell's optparse-applicative.
	</p>
</li>

<li>\ref fcpptrecord
	<ul>
	<li>Added #fcppt::record::label_set and <code>fcppt::record::label_set_tpl</code>.</li>
	<li>Added #fcppt::record::are_disjoint.</li>
	<li>Added #fcppt::record::disjoint_product and <code>fcppt::record::disjoint_product_tpl</code>.</li>
	<li>Added #fcppt::record::multiply_disjoint.</li>
	<li>Added nonconst #fcppt::record::get and #fcppt::record::object::get.</li>
	<li>Added #fcppt::record::has_label.</li>
	<li>Added <code>fcppt::record::label_value_type_tpl</code>.</li>
	<li>Added #fcppt::record::are_equivalent.</li>
	<li>Added #fcppt::record::element_map and <code>fcppt::record::element_map_tpl</code>.</li>
	<li>Allow <code>==</code> and <code>!=</code> comparison for equivalent records.</li>
	<li>Added #fcppt::record::permute.</li>
	<li>Added #fcppt::record::map_elements and #fcppt::record::map.</li>
	<li>Added #fcppt::record::element_vector  and <code>fcppt::record::element_vector_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Added #fcppt::no_init constructor to #fcppt::strong_typedef.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added <code>fcppt::type_traits::constructible_from</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::args_from_second.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_250 Changed functionality

<ul>

<li>\ref fcpptmath
	<ul>
	<li>Moved <code>fcppt::math::static_storage</code>,
	<code>fcppt::math::matrix::static_storage</code>,
	<code>fcppt::math::map</code> and <code>fcppt::math::binary_map</code>
	to detail.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>#fcppt::optional::alternative now evaluates its second argument only if the first is nothing.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::args_vector now uses #fcppt::string instead of <code>std::string</code>.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_250 Bugfixes

<ul>

<li>\ref fcpptrecord
	<ul>
	<li>Fixed output of records to wide streams.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_241 2.4.1

\subsection changes_bugfixes_to_241 Bugfixes

<ul>

<li><code>CMake</code>
	<ul>
	<li>Set <code>CMAKE_CXX_STANDARD</code> to <code>14</code> in order to fix a bug with imported Qt targets.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_240 2.4.0

\subsection changes_added_functionality_to_240 Added functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Allow nonconst references and arbitrary return types in #fcppt::cast::apply.</li>
	<li>Added #fcppt::cast::dynamic_fun and #fcppt::cast::dynamic_cross_fun.</li>
	<li>Added #fcppt::cast::dynamic_any and #fcppt::cast::dynamic_any_fun.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added #fcppt::container::grid::resize.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added #fcppt::either::failure_opt.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added #fcppt::math::power_of_2.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Added #fcppt::reference_to_const.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added #fcppt::variant::dynamic_cast_ which tries several dynamic casts.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_240 Changed functionality

<ul>

<li>\ref fcpptmath
	<ul>
	<li>Renamed <code>fcppt::math::generate_binary_vectors</code> to #fcppt::math::vector::bit_strings.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_240 Removed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Removed unused <code>fcppt::cast::apply_fun</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed <code>%fcppt::container::grid::object::{rbegin, rend, cbegin, cend, crbegin, crend}</code>.</li>
	<li>Removed <code>fcppt::container::grid::object::resize</code> and <code>fcppt::container::grid::object::resize_init</code>.</li>
	<li>Removed <code>fcppt::container::grid::resize_preserve</code> and <code>fcppt::container::grid::resize_preserve_init</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::step</code>.</li>
	<li>Removed <code>fcppt::math::bresenham</code> and <code>fcppt::math::bresenham_thick</code>.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Removed <code>fcppt::reference<T>::get_pointer</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_230 2.3.0

\subsection changes_added_functionality_to_230 Added functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li>Set <code>FOLDER</code> properties on targets.</li>
	<li>Added <code>fcppt_utils_set_target_folder</code>.</li>
	<li>Added <code>fcppt_utils_add_example</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore VC++ warning <code>4309</code> (overflow of a constant) in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added <code>fcppt::container::untuple</code>.</li>
	</ul>
</li>

<li>\ref fcppteither
	<ul>
	<li>Added #fcppt::either::make_success and #fcppt::either::make_failure.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::widen_string.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::index_of_iterator</code>.</li>
	</ul>
</li>

<li>\ref fcpptrecord
	<p>
	New library that implements <em>generic records</em>, whose elements are accessed by unique label types.
	</p>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added <code>fcppt/variant/comparison.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::unit.</li>
	<li>#fcppt::move_if and #fcppt::move_if_rvalue now also work on rvalues.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_230 Changed functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li><code>fcppt_utils_add_test</code> now gets the test directory as argument as well.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li><code>fcppt::algorithm::vararg_map</code> now uses a fusion sequence instead of an MPL sequence.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_220 2.2.0

\subsection changes_added_functionality_to_220 Added functionality

<ul>

<li><code>CMake</code>
	<p>
	Added <em>interface libraries</em> to fcppt's exported targets. For
	example, <code>fcppt_core_interface</code> can be used to inherit the
	include paths and compile definitions from <code>fcppt_core</code>
	without linking to the library.
	</p>
	<ul>
	<li>Added <code>INCLUDE_DIRS</code> and <code>LINK_LIBS</code> to
	<code>fcppt_utils_add_dummy_target</code>.</li>
	<li>Added <code>fcppt_utils_is_path_prefix_of</code>.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::fold_break.</li>
	<li>Added #fcppt::algorithm::equal_range.</li>
	<li>Added #fcppt::algorithm::binary_search.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Added <code>FCPPT_CONFIG_GNU_GCC_COMPILER</code> to distinguish gcc from clang.</li>
	<li>Ignore <code>-Wundefined-var-template</code> for
	<code>clang-3.9</code> in external headers.</li>
	<li>Ignore <code>-Wsuggest-override</code> in external headers.</li>
	<li>Ignore <code>-Wnull-dereference</code> for <code>gcc-6</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Added #fcppt::container::bitfield::init.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>Added #fcppt::container::tree::make_pre_order.</li>
	<li>Added #fcppt::container::tree::make_to_root.</li>
	</ul>
</li>

<li>\ref fcpptfilesystem
	<ul>
	<li>Added #fcppt::filesystem::directory_range.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>The type of the first zero in <code>fcppt::mpl::partial_sums</code> can now be specified.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::to_pointer.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_220 Changed functionality

<ul>
<li><code>CMake</code>
	<ul>
	<li>Use named arguments in <code>fcppt_utils_generate_config</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added <code>_fwd</code> headers to #fcppt::io::istream,
	#fcppt::io::ostream, #fcppt::io::istringstream,
	#fcppt::io::ostringstream and #fcppt::io::stringstream.</li>
	<li>Moved <code>fcppt::io::ifstream</code>, <code>fcppt::io::ofstream</code> and
	<code>fcppt::io::fstream</code> to #fcppt::filesystem::ifstream,
	#fcppt::filesystem::ofstream and #fcppt::filesystem::fstream.</li>
	</ul>
</li>

<li>\ref fcpptlog
	<p>
	The logging library went through a major rewrite, with the purpose
	to remove global objects.</p>
	<ul>
	<li>#fcppt::log::object now always refers to an #fcppt::log::context.</li>
	<li>Log levels are stored in #fcppt::log::context objects
	only. This way, they can be set before any log locations are
	created.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Renamed <code>fcppt::container::bitfield::object_from_enum</code>
	to <code>fcppt::container::bitfield::enum_object</code> and introduced
	an <code>_fwd</code> header.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_220 Removed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>fcppt::cast::static_downcast_ptr</code>.</li>
	</ul>
</li>

</ul>

\section changes_changes_to_210 2.1.0

\subsection changes_general_to_210 General changes

<ul>
<li>
	<b>VC++ from Visual Studio 2015 Update 2</b> is now supported.
</li>
</ul>

\subsection changes_added_functionality_to_210 Added functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::generate_n.</li>
	<li>Allow different implementations for ranges via #fcppt::algorithm::loop_break_impl.</li>
	<li>Support <code>std::tuple</code> as a range.</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Added #fcppt::cast::dynamic_cross and <code>fcppt::cast::dynamic_cross_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore <code>-Wfloat-conversion</code> and
	<code>-Wsign-conversion</code> for <code>gcc-6</code> in external
	headers again.</li>
	<li>Ignore <code>-Wexpansion-to-defined</code> for
	<code>clang-3.9</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added <code>fcppt::container::make_array</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Added #fcppt::container::grid::make_min and #fcppt::container::grid::make_sup.</li>
	<li>Added #fcppt::container::grid::map.</li>
	<li>Made #fcppt::container::grid::pos_range and #fcppt::container::grid::pos_ref_range assignable.</li>
	<li>Added #fcppt::container::grid::apply.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>#fcppt::container::tree::pre_order is now
	copyable.</li>
	<li>Added #fcppt::container::tree::to_root.</li>
	</ul>
</li>

<li>\ref fcppteither
	<p>
	New library that represents sum types of <em>failure</em> and
	<em>success</em>.
	</p>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>%fcppt::cast_to_enum_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::read_chars.</li>
	<li>Added #fcppt::io::get.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::flatten</code>.</li>
	<li>Added <code>fcppt::mpl::numeric_max</code>.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added #fcppt::optional::filter.</li>
	<li>Added #fcppt::optional::apply.</li>
	<li>Added #fcppt::optional::cat.</li>
	<li>Added #fcppt::optional::make.</li>
	</ul>
</li>

<li>\ref fcppttypetraits
	<ul>
	<li>Added #fcppt::type_traits::is_base_of that only works
	on complete types.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added #fcppt::move_if.</li>
	<li>Added #fcppt::args.</li>
	<li>#fcppt::cyclic_iterator can now be a random-access
	iterator.</li>
	<li>Added #fcppt::getenv.</li>
	<li>Added #FCPPT_USE.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_210 Changed functionality

<ul>

<li>\ref fcpptcasts
	<ul>
	<li>Renamed <code>fcppt::cast::try_dynamic</code> to #fcppt::cast::dynamic, and renamed
	<code>%fcppt::cast::dynamic</code> to <code>fcppt::cast::dynamic_exn</code>.</li>
	<li>#fcppt::cast::dynamic and <code>fcppt::cast::dynamic_exn</code> only work on related types now.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li><code>%fcppt::cast_to_enum</code> now returns an optional.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Moved everything to the #fcppt::optional
	namespace.</li>
	<li>Removed optional references and replaced them with optionals to
	#fcppt::reference.</li>
	<li>Renamed <code>optional_bind_construct</code> to #fcppt::optional::map.</li>
	</ul>
</li>

<li>\ref fcpptref
	<ul>
	<li>Renamed <code>fcppt::reference_wrapper</code> to #fcppt::reference.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>#fcppt::cyclic_iterator now uses a pair to construct
	its boundaries.</li>
	<li>#FCPPT_NONCOPYABLE and
	<code>FCPPT_NONASSIGNABLE</code> now simply use <code>=delete</code> instead
	of <code>private:</code></li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_210 Removed functionality

<ul>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::shift_compare</code>.</li>
	</ul>
</li>

<li>fcpptassign
	<ul>
	<li>Removed <code>fcppt::assign::make_container_opt</code>.</li>
	<li>Removed <code>fcppt::assign::make_map</code>.</li>
	</ul>
</li>

<li>\ref fcpptcasts
	<ul>
	<li>Removed <code>%fcppt::cast::dynamic</code> for pointers.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Removed <code>fcppt::io::read_exn</code>.</li>
	<li>Removed <code>fcppt::io::raw_container_source</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed <code>fcppt::math::mod_assign</code>.</li>
	</ul>
</li>

<li>\ref fcpptstring
	<ul>
	<li>Removed <code>fcppt::extract_from_string_exn</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Removed <code>FCPPT_DECLTYPE_SINK</code>.</li>
	<li>Removed <code>fcppt::tag_value</code>.</li>
	</ul>
</li>

</ul>



\section changes_changes_to_200 2.0.0

\subsection changes_general_to_200 General changes

<ul>

<li>
	<b><code>C++14</code> is now required.</b> This probably excludes compilers
	older than <code>gcc-5.2</code> and <code>clang-3.4</code>. However, this
	also leads to several improvements:
	<ul>
	<li>Polymorphic lambdas are now used to initialize arrays with static indices.
	This improves the safety of several algorithms, e.g. <code>matrix *
	vector</code>, <code>matrix * matrix</code> and so on, by checking for
	out-of-bounds accesses at compile-time.</li>
	<li>Heterogenous lookup is now supported. For example, you can search a
	<code>std::set<unique_ptr<int>></code> given an <code>int *</code>.</li>
	</ul>
</li>

<li>
	\ref fcppt.algorithm has been cleaned up substantially:
	<ul>
	<li>
	All <code>_exn</code> functions have been removed in favor of
	<code>%fcppt::optional_to_exception</code>.</li>
	<li>All iterator-based versions have
	been removed in favor of ranges.</li>
	<li>All algorithms can now take rvalues to support views.</li>
	</ul>
</li>

</ul>

\subsection changes_bugfixes_to_200 Bugfixes

<ul>
<li>\ref fcpptalgorithm
	<ul>
	<li>Fixed return type of <code>fcppt::algorithm::join</code> so it
	never returns a reference.</li>
	</ul>
</li>

</ul>

\subsection changes_added_functionality_to_200 Added functionality

<ul>

<li><code>CMake</code>
	<ul>
	<li>Added <code>NO_CODE</code> flag to
	<code>fcppt_utils_add_test</code> which can be used to generate test
	cases that only consist of static asserts.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Added #fcppt::algorithm::loop to express loops over
	different ranges, including MPL ranges. Also added #fcppt::algorithm::loop_break which is similar to the former but
	can break out of the loop early.</li>
	</ul>
</li>

<li>\ref fcpptbit
	<ul>
	<li> New library that makes creating bit masks and testing them a bit
	safer and less tedious. See for example #fcppt::bit::shifted_mask and #fcppt::bit::test.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Added #fcppt::container::find_opt which returns a
	reference to <code> value_type</code> instead of
	<code>mapped_type</code>.</li>
	</ul>
</li>

<li>\ref fcpptconfig
	<ul>
	<li>Ignore <code>-Wsign-compare</code> in external headers.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Added <code>fcppt::mpl::enum_range</code> and <code>fcppt::mpl::enum_range_start_end</code>.<li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Added #fcppt::math::int_range and #fcppt::math::int_range_count.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Added #fcppt::math::matrix::init.</li>
	<li>Added <code>fcppt::math::matrix::at_c</code>.</li>
	<li>Added <code>
	fcppt::math::matrix::delete_row_and_column_static</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathsphere
	<ul>
	<li>Added <code>fcppt/math/sphere/output.hpp</code>.</li>
	</ul>
</li>

<li><code>fcpptmpl</code>
	<ul>
	<li>Added <code>fcppt::mpl::copy</code>.</li>
	<li>Added <code>fcppt::mpl::for_each_break</code>.</li>
	<li>Added <code>fcppt::mpl::integral_cast_tpl</code>.</li>
	</ul>
</li>

<li>\ref fcpptio
	<ul>
	<li>Added #fcppt::io::expect which fails a stream if it
	cannot read the expected value.</li>
	</ul>
</li>

<li>\ref fcpptoptional
	<ul>
	<li>Added <code>fcppt::optional_join</code>.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Added #fcppt::signal::optional_auto_connection
	typedef.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Added <code>fcppt::variant::variadic</code>.</li>
	</ul>
</li>

<li>\ref fcpptvarious
	<ul>
	<li>Added <code>FCPPT_DECLTYPE_SINK</code> which returns
	<code>decltype</code> of an expression and also uses it. This is useful
	in polymorphic lambdas where the argument is only used for its
	type.</li>
	<li>Added #fcppt::tag_type which extracts the type of an
	#fcppt::tag.</li>
	<li>Added <code>fcppt::tag_value</code> to extract a
	default-constructed value of a tag, which is useful for integral
	constants.</li>
	</ul>
</li>

</ul>

\subsection changes_changed_functionality_to_200 Changed functionality

<ul>
<li>\ref fcpptalgorithm
	<ul>
	<li>#fcppt::algorithm::sequence_iteration, #fcppt::algorithm::map_iteration and
	#fcppt::algorithm::map_iteration_second now expect their
	function to return #fcppt::algorithm::update_action
	instead of a bool.</li>
	<li>Renamed <code>%fcppt::algorithm::array_fold_static</code> to
	<code>%fcppt::algorithm::array_init</code>,
	<code>%fcppt::algorithm::enum_array_fold_static</code> to
	<code>%fcppt::algorithm::enum_array_init</code> and
	<code>%fcppt::algorithm::array_init</code> to
	<code>%fcppt::algorithm::array_init_const</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Renamed <code>fcppt::container::find_opt</code> to #fcppt::container::find_opt_mapped.</li>
	</ul>
</li>

<li>\ref fcpptcontainerbitfield
	<ul>
	<li>Simplified #fcppt::container::bitfield::object by
	removing iterator-based functions, <code>operator bool</code>,
	<code>swap</code> and <code>clear</code>.</li>
	<li>Moved comparison operators into
	<code>fcppt/container/bitfield/comparison.hpp</code>.</li>
	<li>Moved all other operators into
	<code>fcppt/container/bitfield/operators.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainertree
	<ul>
	<li>Made #fcppt::container::tree::child_position a free
	function and made its implementation safer.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Removed <code>fcppt::enum_is_empty</code>. All enum ranges are now
	non-empty.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Use #fcppt::math::size_type directly for static sizes,
	instead of <code>std::integral_constant</code>. This greatly simplifies
	matching of template arguments.</li>
	</ul>
</li>

<li>\ref fcpptmathbox
	<ul>
	<li>#fcppt::math::box::object now uses a
	<code>(pos,max)</code> representation instead of
	<code>(pos,dim)</code>. This greatly simplifies a lot of algorithms on
	boxes. It also changes the interface slightly.</li>
	<li>Added #fcppt::math::box::init_dim and #fcppt::math::box::init_max to replace the former
	<code>fcppt::math::box::init</code>.</li>
	<li>Moved <code>null</code> of #fcppt::math::box::object
	to #fcppt::math::box::null.</li>
	</ul>
</li>

<li>\ref fcpptmathdim
	<ul>
	<li>Use variadic constructors for #fcppt::math::dim::object.</li>
	<li>Moved <code>null</code> of #fcppt::math::dim::object
	to #fcppt::math::dim::null.</li>
	</ul>
</li>

<li>\ref fcpptmathmatrix
	<ul>
	<li>Use variadic constructors for #fcppt::math::matrix::object which takes a parameter pack of
	#fcppt::math::matrix::row.</li>
	<li>Moved <code>identity</code> of #fcppt::math::matrix::object to #fcppt::math::matrix::identity.</li>
	</ul>
</li>

<li>\ref fcpptmathsphere
	<ul>
	<li>Moved comparison operators of #fcppt::math::sphere::object to
	<code>fcppt/math/sphere/comparison.hpp</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Use variadic constructors for #fcppt::math::vector::object.</li>
	<li>Moved <code>null</code> of #fcppt::math::vector::object
	to #fcppt::math::vector::null.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Renamed <code>fcppt::make_unique_ptr_fcppt</code> to #fcppt::make_unique_ptr.</li>
	</ul>
</li>

</ul>

\subsection changes_removed_functionality_to_200 Removed functionality

<ul>
<li><code>CMake</code>
	<ul>
	<li>Removed
	<code>BOOST_THREAD_DONT_PROVIDE_DEPRECATED_FEATURES_SINCE_V3_0_0</code>
	which has not been used for a long time.</li>
	</ul>
</li>

<li>\ref fcpptalgorithm
	<ul>
	<li>Removed <code>fcppt::algorithm::array_fold</code> and
	<code>fcppt::algorithm::enum_array_fold</code> which were only useful
	in <code>C++11</code>.
	</ul>
</li>

<li>\ref fcpptcontainer
	<ul>
	<li>Removed <code>fcppt::container::find_exn</code> in favor of
	<code>%fcppt::optional_to_exception</code>.</li>
	</ul>
</li>

<li>\ref fcpptcontainergrid
	<ul>
	<li>Removed <code>fcppt::container::grid::object::at</code> in favor of
	#fcppt::container::grid::at_optional.</li>
	<li>Removed <code>fcppt::container::grid::is_square</code> which is
	covered by #fcppt::math::dim::is_quadratic.</li>
	<li>Removed <code>fcppt::container::grid::iterator_position</code>
	which was unused and probably broken.</li>
	</ul>
</li>

<li>\ref fcpptenum
	<ul>
	<li>Removed <code>%at()</code> and <code>empty()</code> from
	<code>%fcppt::container::enum_array</code>.</li>
	</ul>
</li>

<li>\ref fcpptmath
	<ul>
	<li>Removed default constructors.</li>
	<li>Removed container-like functionality, including iterator-based
	constructors, <code>begin</code>/<code>end</code>, <code>front</code>/
	<code>back</code>, etc, and so on.</li>
	<li>Removed swap implementations because they gained nothing over
	<code>std::swap</code>.</li>
	</ul>
</li>

<li>\ref fcpptmathvector
	<ul>
	<li>Removed <code>%fcppt::math::vector::project</code> and
	<code>%fcppt::math::vector::orthogonalize</code>.</li>
	</ul>
</li>

<li>\ref fcpptsignal
	<ul>
	<li>Removed <code>fcppt::signal::scoped_connection</code> which was a
	typedef to <code>fcppt::signal::auto_connection const</code>.</li>
	</ul>
</li>

<li>\ref fcpptsmartptr
	<ul>
	<li>Removed <code>fcppt::make_unique_ptr</code> which used to create a
	<code>std::unique_ptr</code>.</li>
	</ul>
</li>

<li>\ref fcpptstrongtypedef
	<ul>
	<li>Removed implicit assignment from the underlying type.</li>
	<li>Removed strong typedef references.</li>
	</ul>
</li>

<li>\ref fcppttime
	<ul>
	<li>Removed <code>fcppt::time::parse_time</code> and
	<code>fcppt::time::parse_date</code>.</li>
	</ul>
</li>

<li>\ref fcpptvariant
	<ul>
	<li>Removed <code>fcppt::variant::object::get_exn</code>. Use the free
	function <code>fcppt::variant::get_exn</code> instead.</li>
	</ul>
</li>

</ul>
*/
